<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zealot.dcasting.mapper.InquiriesMapper">
  <resultMap id="BaseResultMap" type="com.zealot.dcasting.model.Inquiries">
    <id column="inquiry_id" jdbcType="CHAR" property="inquiryId" />
    <result column="inquiry_user_id" jdbcType="BIGINT" property="inquiryUserId" />
    <result column="inquiry_group_id" jdbcType="BIGINT" property="inquiryGroupId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_quantity" jdbcType="INTEGER" property="productQuantity" />
    <result column="service_category" jdbcType="VARCHAR" property="serviceCategory" />
    <result column="material_type" jdbcType="VARCHAR" property="materialType" />
    <result column="payment" jdbcType="VARCHAR" property="payment" />
    <result column="requirement_date" jdbcType="TIMESTAMP" property="requirementDate" />
    <result column="shipping_address" jdbcType="VARCHAR" property="shippingAddress" />
    <result column="shipment" jdbcType="VARCHAR" property="shipment" />
    <result column="packing" jdbcType="VARCHAR" property="packing" />
    <result column="inquiry_status" jdbcType="CHAR" property="inquiryStatus" />
    <result column="attachment" jdbcType="VARCHAR" property="attachment" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="create_datetime" jdbcType="TIMESTAMP" property="createDatetime" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="update_datetime" jdbcType="TIMESTAMP" property="updateDatetime" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    inquiry_id, inquiry_user_id, inquiry_group_id, product_name, product_quantity, service_category, 
    material_type, payment, requirement_date, shipping_address, shipment, packing, inquiry_status, 
    attachment, remark, create_user_id, create_datetime, update_user_id, update_datetime, 
    flag
  </sql>
  <select id="selectByExample" parameterType="com.zealot.dcasting.model.InquiriesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public.inquiries
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from public.inquiries
    where inquiry_id = #{inquiryId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from public.inquiries
    where inquiry_id = #{inquiryId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zealot.dcasting.model.InquiriesExample">
    delete from public.inquiries
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zealot.dcasting.model.Inquiries">
    insert into public.inquiries (inquiry_id, inquiry_user_id, inquiry_group_id, 
      product_name, product_quantity, service_category, 
      material_type, payment, requirement_date, 
      shipping_address, shipment, packing, 
      inquiry_status, attachment, remark, 
      create_user_id, create_datetime, update_user_id, 
      update_datetime, flag)
    values (#{inquiryId,jdbcType=CHAR}, #{inquiryUserId,jdbcType=BIGINT}, #{inquiryGroupId,jdbcType=BIGINT}, 
      #{productName,jdbcType=VARCHAR}, #{productQuantity,jdbcType=INTEGER}, #{serviceCategory,jdbcType=VARCHAR}, 
      #{materialType,jdbcType=VARCHAR}, #{payment,jdbcType=VARCHAR}, #{requirementDate,jdbcType=TIMESTAMP}, 
      #{shippingAddress,jdbcType=VARCHAR}, #{shipment,jdbcType=VARCHAR}, #{packing,jdbcType=VARCHAR}, 
      #{inquiryStatus,jdbcType=CHAR}, #{attachment,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{createUserId,jdbcType=BIGINT}, #{createDatetime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT}, 
      #{updateDatetime,jdbcType=TIMESTAMP}, #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zealot.dcasting.model.Inquiries">
    insert into public.inquiries
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="inquiryId != null">
        inquiry_id,
      </if>
      <if test="inquiryUserId != null">
        inquiry_user_id,
      </if>
      <if test="inquiryGroupId != null">
        inquiry_group_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="productQuantity != null">
        product_quantity,
      </if>
      <if test="serviceCategory != null">
        service_category,
      </if>
      <if test="materialType != null">
        material_type,
      </if>
      <if test="payment != null">
        payment,
      </if>
      <if test="requirementDate != null">
        requirement_date,
      </if>
      <if test="shippingAddress != null">
        shipping_address,
      </if>
      <if test="shipment != null">
        shipment,
      </if>
      <if test="packing != null">
        packing,
      </if>
      <if test="inquiryStatus != null">
        inquiry_status,
      </if>
      <if test="attachment != null">
        attachment,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createDatetime != null">
        create_datetime,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="updateDatetime != null">
        update_datetime,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="inquiryId != null">
        #{inquiryId,jdbcType=CHAR},
      </if>
      <if test="inquiryUserId != null">
        #{inquiryUserId,jdbcType=BIGINT},
      </if>
      <if test="inquiryGroupId != null">
        #{inquiryGroupId,jdbcType=BIGINT},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productQuantity != null">
        #{productQuantity,jdbcType=INTEGER},
      </if>
      <if test="serviceCategory != null">
        #{serviceCategory,jdbcType=VARCHAR},
      </if>
      <if test="materialType != null">
        #{materialType,jdbcType=VARCHAR},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=VARCHAR},
      </if>
      <if test="requirementDate != null">
        #{requirementDate,jdbcType=TIMESTAMP},
      </if>
      <if test="shippingAddress != null">
        #{shippingAddress,jdbcType=VARCHAR},
      </if>
      <if test="shipment != null">
        #{shipment,jdbcType=VARCHAR},
      </if>
      <if test="packing != null">
        #{packing,jdbcType=VARCHAR},
      </if>
      <if test="inquiryStatus != null">
        #{inquiryStatus,jdbcType=CHAR},
      </if>
      <if test="attachment != null">
        #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createDatetime != null">
        #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateDatetime != null">
        #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zealot.dcasting.model.InquiriesExample" resultType="java.lang.Long">
    select count(*) from public.inquiries
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update public.inquiries
    <set>
      <if test="record.inquiryId != null">
        inquiry_id = #{record.inquiryId,jdbcType=CHAR},
      </if>
      <if test="record.inquiryUserId != null">
        inquiry_user_id = #{record.inquiryUserId,jdbcType=BIGINT},
      </if>
      <if test="record.inquiryGroupId != null">
        inquiry_group_id = #{record.inquiryGroupId,jdbcType=BIGINT},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productQuantity != null">
        product_quantity = #{record.productQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.serviceCategory != null">
        service_category = #{record.serviceCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.materialType != null">
        material_type = #{record.materialType,jdbcType=VARCHAR},
      </if>
      <if test="record.payment != null">
        payment = #{record.payment,jdbcType=VARCHAR},
      </if>
      <if test="record.requirementDate != null">
        requirement_date = #{record.requirementDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shippingAddress != null">
        shipping_address = #{record.shippingAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.shipment != null">
        shipment = #{record.shipment,jdbcType=VARCHAR},
      </if>
      <if test="record.packing != null">
        packing = #{record.packing,jdbcType=VARCHAR},
      </if>
      <if test="record.inquiryStatus != null">
        inquiry_status = #{record.inquiryStatus,jdbcType=CHAR},
      </if>
      <if test="record.attachment != null">
        attachment = #{record.attachment,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.createDatetime != null">
        create_datetime = #{record.createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      </if>
      <if test="record.updateDatetime != null">
        update_datetime = #{record.updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update public.inquiries
    set inquiry_id = #{record.inquiryId,jdbcType=CHAR},
      inquiry_user_id = #{record.inquiryUserId,jdbcType=BIGINT},
      inquiry_group_id = #{record.inquiryGroupId,jdbcType=BIGINT},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_quantity = #{record.productQuantity,jdbcType=INTEGER},
      service_category = #{record.serviceCategory,jdbcType=VARCHAR},
      material_type = #{record.materialType,jdbcType=VARCHAR},
      payment = #{record.payment,jdbcType=VARCHAR},
      requirement_date = #{record.requirementDate,jdbcType=TIMESTAMP},
      shipping_address = #{record.shippingAddress,jdbcType=VARCHAR},
      shipment = #{record.shipment,jdbcType=VARCHAR},
      packing = #{record.packing,jdbcType=VARCHAR},
      inquiry_status = #{record.inquiryStatus,jdbcType=CHAR},
      attachment = #{record.attachment,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      create_datetime = #{record.createDatetime,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      update_datetime = #{record.updateDatetime,jdbcType=TIMESTAMP},
      flag = #{record.flag,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zealot.dcasting.model.Inquiries">
    update public.inquiries
    <set>
      <if test="inquiryUserId != null">
        inquiry_user_id = #{inquiryUserId,jdbcType=BIGINT},
      </if>
      <if test="inquiryGroupId != null">
        inquiry_group_id = #{inquiryGroupId,jdbcType=BIGINT},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productQuantity != null">
        product_quantity = #{productQuantity,jdbcType=INTEGER},
      </if>
      <if test="serviceCategory != null">
        service_category = #{serviceCategory,jdbcType=VARCHAR},
      </if>
      <if test="materialType != null">
        material_type = #{materialType,jdbcType=VARCHAR},
      </if>
      <if test="payment != null">
        payment = #{payment,jdbcType=VARCHAR},
      </if>
      <if test="requirementDate != null">
        requirement_date = #{requirementDate,jdbcType=TIMESTAMP},
      </if>
      <if test="shippingAddress != null">
        shipping_address = #{shippingAddress,jdbcType=VARCHAR},
      </if>
      <if test="shipment != null">
        shipment = #{shipment,jdbcType=VARCHAR},
      </if>
      <if test="packing != null">
        packing = #{packing,jdbcType=VARCHAR},
      </if>
      <if test="inquiryStatus != null">
        inquiry_status = #{inquiryStatus,jdbcType=CHAR},
      </if>
      <if test="attachment != null">
        attachment = #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createDatetime != null">
        create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateDatetime != null">
        update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where inquiry_id = #{inquiryId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zealot.dcasting.model.Inquiries">
    update public.inquiries
    set inquiry_user_id = #{inquiryUserId,jdbcType=BIGINT},
      inquiry_group_id = #{inquiryGroupId,jdbcType=BIGINT},
      product_name = #{productName,jdbcType=VARCHAR},
      product_quantity = #{productQuantity,jdbcType=INTEGER},
      service_category = #{serviceCategory,jdbcType=VARCHAR},
      material_type = #{materialType,jdbcType=VARCHAR},
      payment = #{payment,jdbcType=VARCHAR},
      requirement_date = #{requirementDate,jdbcType=TIMESTAMP},
      shipping_address = #{shippingAddress,jdbcType=VARCHAR},
      shipment = #{shipment,jdbcType=VARCHAR},
      packing = #{packing,jdbcType=VARCHAR},
      inquiry_status = #{inquiryStatus,jdbcType=CHAR},
      attachment = #{attachment,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=INTEGER}
    where inquiry_id = #{inquiryId,jdbcType=CHAR}
  </update>
</mapper>